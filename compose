#!/bin/bash
test -f config && . "./config"
set -e

IMAGE_ZOOKEEPER="jplock/zookeeper:3.4.6"
IMAGE_MESOS_MASTER="mesosphere/mesos-master:0.26.0-0.2.145.ubuntu1404"
IMAGE_MESOS_SLAVE="mesosphere/mesos-slave:0.26.0-0.2.145.ubuntu1404"
IMAGE_MARATHON="mesosphere/marathon"

function mesos_prepare_env() {

	if [ "_$INTERFACE" = "_" ]; then echo "missing env: INTERFACE"; exit 1; fi
	if [ "_$MASTERS" = "_" ]; then echo "missing env: MASTERS"; exit 1; fi
	if [ "_$QUORUM" = "_" ]; then echo "missing env: QUORUM"; exit 1; fi

	# Create the list of zookeeper host:port configs
	for i in $MASTERS; do
		if [ "_${ZK}" != "_" ]; then
			ZK="${ZK},"
		fi
		ZK="${ZK}${i}:2181"
	done

	# Find the public IP for the selected network interface
	HOST_IP=`ifconfig $INTERFACE | grep "inet addr" | awk -F: '{print $2}' | awk '{print $1}'`
	if [ "_$HOST_IP" = "_" ]; then
		HOST_IP=`ifconfig $INTERFACE | grep "inet " | awk '{print $2}'`
	fi

	if [ "_$MYID" = "_" ]; then
		MYID="`echo $HOST_IP|cut -d. -f4`"
	fi

	# Build zookeeper urls for mesos and marathon
	MESOS_ZK="zk://$ZK/mesos"
	MARATHON_ZK="zk://$ZK/marathon"

	export INTERFACE
	export MASTERS
	export QUORUM
	export HOST_IP
	export MESOS_ZK
	export MARATHON_ZK
	export MYID

	echo "INTERFACE=$INTERFACE"
	echo "QUORUM=$QUORUM"
	echo "MASTERS=$MASTERS"
	echo "HOST_IP=$HOST_IP"
	echo "MESOS_ZK=$MESOS_ZK"
	echo "MARATHON_ZK=$MARATHON_ZK"
	echo "MYID=$MYID"

}

function mesos_slave() {

    mesos_prepare_env

	cat << EOF | envsubst > docker-compose.yml
mesosslave:
  image: $IMAGE_MESOS_SLAVE
  restart: always
  net: host
  volumes:
   - /var/run/docker.sock:/var/run/docker.sock
   - /usr/bin/docker:/usr/bin/docker
  privileged: true
  ports:
   - "$HOST_IP:5051:5051"
  environment:
   - "MESOS_HOSTNAME=$HOST_IP"
   - "MESOS_IP=$HOST_IP"
   - "MESOS_MASTER=$MESOS_ZK"
EOF
	echo "docker-compose.yml saved."
}

function mesos_master() {

    mesos_prepare_env

	cat << EOF | envsubst > docker-compose.yml
zookeeper:
  image: $IMAGE_ZOOKEEPER
  restart: always
  net: host
  # ports:
  #  - "$HOST_IP:2181:2181"
  #  - "$HOST_IP:2888:2888"
  #  - "$HOST_IP:3888:3888"
  volumes:
   - ./zookeeper/conf:/opt/zookeeper/conf
   - ./zookeeper/data:/tmp/zookeeper

mesosmaster:
  image: $IMAGE_MESOS_MASTER
  restart: always
  net: host
  # ports:
  #  - "$HOST_IP:5050:5050"
  environment:
   - "MESOS_HOSTNAME=$HOST_IP"
   - "MESOS_IP=$HOST_IP"
   - "MESOS_ZK=$MESOS_ZK"
   - "MESOS_QUORUM=$QUORUM"

marathon:
  image: $IMAGE_MARATHON
  restart: always
  net: host
  # ports:
  #  - "$HOST_IP:8080:8080"
  environment:
   - "MARATHON_MASTER=$MESOS_ZK"
   - "MARATHON_ZK=$MARATHON_ZK"
   - "MARATHON_HTTP_ADDRESS=$HOST_IP"
   - "MARATHON_HOSTNAME=$HOST_IP"
EOF
	echo "docker-compose.yml saved."

	# Prepare zookeeper config and data
	mkdir -p zookeeper/conf
	mkdir -p zookeeper/data

	echo $MYID > zookeeper/data/myid

    # Retrieve some conf from zookeeper image (configuration.xsl, log4j.properties)
    # because it'll be inaccessible after we mount `conf` as a volume.
	docker run --rm -v $(pwd)/zookeeper/conf:/conf --entrypoint=cp $IMAGE_ZOOKEEPER conf/configuration.xsl conf/log4j.properties /conf/

	cat << EOF > zookeeper/conf/zoo.cfg
tickTime=2000
dataDir=/tmp/zookeeper/
clientPort=2181
clientPortAddress=$HOST_IP
initLimit=5
syncLimit=2
EOF

	INDEX=1
	for SERVER in $MASTERS; do
		echo "server.$INDEX=$SERVER:2888:3888" >> zookeeper/conf/zoo.cfg
		INDEX=$((INDEX + 1))
	done
	echo "zookeeper ready."
}

if [ "_$1" = "_master" ]; then
	mesos_master
elif [ "_$1" = "_slave" ]; then
	mesos_slave
else
	echo "usage: $0 <master|slave>"
fi

